# Generated by Django 4.2.11 on 2024-04-08 13:03

from django.db import migrations, models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=300, verbose_name='Title')),
                ('is_active', models.BooleanField(default=False, verbose_name='Active Status')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Delete Status')),
            ],
            options={
                'verbose_name': 'Product Category',
                'verbose_name_plural': 'Product Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('price', models.IntegerField(verbose_name='Price')),
                ('short_description', models.CharField(max_length=360, null=True, verbose_name='Short Description')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Main Description')),
                ('is_active', models.BooleanField(default=False, verbose_name='Active Status')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Delete Status')),
                ('slug', models.SlugField(blank=True, default='', max_length=200, unique=True, verbose_name='Slug')),
                ('category', models.ManyToManyField(related_name='product_categories', to='product.productcategory', verbose_name='Categories')),
                ('tag', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
    ]
